#!/usr/bin/env bash -e

usage () {
  echo Usage: $0 TODO
  exit 1
}

STATE=~/.opam-docker
REPO=ocaml/opam
ARCH=x86_64
DISTRO=debian
VERSION=4.02.3
JOBS=2
DRY=

while getopts "a:d:v:j:n" o; do
  case "${o}" in
    "a") ARCH="${OPTARG}" ;;
    "d") DISTRO="${OPTARG}" ;;
    "v") VERSION="${OPTARG}" ;;
    "j") JOBS=${OPTARG} ;;
    "n") DRY="echo" ;;
    *) usage ;;
  esac
done

[ -d "${STATE}" ] || mkdir -p "${STATE}"
[ -t 1 ] && TTY="-t"
case "${ARCH},${DISTRO}" in
  "x86_64,ubuntu") LTAG="ubuntu-15.10" ;;
  "x86_64,debian") LTAG="debian-stable" ;;
  "arm,debian") LTAG="raspbian-8" ;;
  *) echo "Unknown (arch ${ARCH} / distro ${DISTRO}) combination"; exit 1;;
esac
TAG="${LTAG}_ocaml-${VERSION}"
CMD=${@:$OPTIND:1}
PROJECT=${@:$OPTIND+1:1}
[ -n "${PROJECT}" ] || PROJECT="default"
NAME="opam-${PROJECT}"
LABEL="org.ocaml.opam.type=local"

run_shell () {
  ${DRY} docker exec -i ${TTY} ${NAME} opam config exec bash
}

case $CMD in
init)
  SRCDIR=${@:$OPTIND+2:1}
  if [ "${SRCDIR}" = "" ]; then
    echo "Usage: $0 init <opam name> <source directory>"
    echo TODO usage function
    exit 1
  fi
  if [ ! -d "${SRCDIR}" ]; then
    echo ${SRCDIR} does not exist.
    exit 1
  fi
  CONTAINER=`docker ps -q --filter=name=${NAME}`
  CMDLINE="-v ${SRCDIR}:/home/opam/src"
  if [ -n "${CONTAINER}" ]; then
    echo ${PROJECT} already exists, resetting state.
    ${DRY} docker stop -t=1 ${NAME} > /dev/null
    ${DRY} docker rm ${NAME}
  fi
  echo Updating upstream images from ${REPO}:${TAG}...
  ${DRY} docker pull ${REPO}:${TAG}
  echo Starting container ${NAME}...
  ${DRY} docker run --name ${NAME} ${CMDLINE} ${TTY} ${TTY} -d \
    -l org.ocaml.opam.srcdir=${SRCDIR} \
    -l org.ocaml.opam.arch=${ARCH} \
    -l org.ocaml.opam.distro=${DISTRO} \
    -l org.ocaml.opam.version=${VERSION} \
    -l ${LABEL} \
    --restart=unless-stopped ${REPO}:${TAG} tail -f /dev/null || \
    (printf "Docker run failed\n" && exit 1)
  echo Customising container...
  if [ -e "${SRCDIR}/opam" ]; then
    ${DRY} docker exec -i ${NAME} opam pin --yes -k auto -n add ${PROJECT} /home/opam/src
    ${DRY} docker exec -i ${NAME} opam config exec -- opam-depext -u ${PROJECT}
    ${DRY} docker exec -i ${NAME} opam install -y -v -j ${JOBS} --deps-only ${PROJECT}
  fi
  run_shell
  ;;
shell)
  run_shell
  ;;
reset)
  p=${@:$OPTIND+1:1}
  if [ "$p" = "" ]; then
    CONTAINERS=`docker ps -q --filter=label=${LABEL} --format="{{.Names}}"`
    echo Resetting all containers:
  else
    C=`docker ps -q --filter=label=${LABEL} --filter=name=${p}`
    if [ "$C" = "" ]; then
      echo Unknown project $p
      exit 1
    else
      echo Resetting ${p}
    fi
    CONTAINERS=${p}
  fi
  for c in ${CONTAINERS}; do
    echo -n " ==> $c: stop..."
    ${DRY} docker stop -t=1 ${c} > /dev/null
    echo -n "rm..."
    ${DRY} docker rm ${c} > /dev/null
    echo "ok"
  done
  echo " ==> done"
  exit 0
  ;;
list)
  echo Active switches:
  C=`docker ps -q --filter=label=${LABEL} --format="{{.Names}}"`
  for i in ${C}; do
    x=`echo $i | sed 's,^opam-,,g'`
    dir=`docker inspect -f '{{index .Config.Labels "org.ocaml.opam.srcdir"}}' $i`
    distro=`docker inspect -f '{{index .Config.Labels "org.ocaml.opam.distro"}}' $i`
    arch=`docker inspect -f '{{index .Config.Labels "org.ocaml.opam.arch"}}' $i`
    ver=`docker inspect -f '{{index .Config.Labels "org.ocaml.opam.version"}}' $i`
    echo " ==> $x in $dir with OCaml $ver on $distro/$arch"
  done
  exit 0 ;;
save)
  echo TODO
  exit 1
  ;;
config)
  echo TODO
  exit 1
  ;;
*)
  usage
esac

